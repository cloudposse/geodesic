name: "docker"
on:
  pull_request:
    types: [opened, synchronize, reopened]
  release:
    types:
    - created
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout source code at current commit"
      uses: actions/checkout@v2
    - name: Prepare tags for Docker image
      if: (github.event_name == 'release' && github.event.action == 'created') || github.event.pull_request.head.repo.full_name == github.repository
      id: prepare
      # Even though we are no longer releasing plain numbered version tags like "0.111.0"
      # because we want all versions to explicitly identify their base OS, we still need
      # to provide a "latest" tag for automation that just wants the current version.
      # We therefore provide a separate `latest_tag` output that includes the "latest" tag
      # and use that to designate whichever base OS version we recommend as the best supported.
      # Initially that will be Alpine, but at some later point will probably be Debian or Ubuntu.
      run: |
        COMMIT_SHA="${GITHUB_SHA}"
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.pull_request.number }}
          COMMIT_SHA=${{ github.event.pull_request.head.sha }}
        fi
        TAGS="${{ github.repository }}:sha-${COMMIT_SHA:0:7}-{0}"
        if [[ -n $VERSION ]]; then
          TAGS="$TAGS,${{ github.repository }}:${VERSION}-{0}"
        fi
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS,${{ github.repository }}:latest-{0}"
          LATEST_TAGS="$TAGS,${{ github.repository }}:latest"
        else
          LATEST_TAGS="$TAGS"
        fi
        echo ::set-output name=tags::${TAGS}
        echo ::set-output name=latest_tags::${TAGS}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      if: (github.event_name == 'release' && github.event.action == 'created') || github.event.pull_request.head.repo.full_name == github.repository
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: "Build and push Alpine docker image to DockerHub"
      id: docker_build_alpine
      uses: docker/build-push-action@v2
      with:
        push: ${{ (github.event_name == 'release' && github.event.action == 'created') || github.event.pull_request.head.repo.full_name == github.repository }}
        tags: ${{ format(steps.prepare.outputs.latest_tags, 'alpine') }}
        file: ./os/alpine/Dockerfile.alpine
    - name: "Build and push Debian docker image to DockerHub"
      id: docker_build_debian
      uses: docker/build-push-action@v2
      with:
        push: ${{ (github.event_name == 'release' && github.event.action == 'created') || github.event.pull_request.head.repo.full_name == github.repository }}
        tags: ${{ format(steps.prepare.outputs.latest_tags, 'debian') }}
        file: ./os/debian/Dockerfile.debian
