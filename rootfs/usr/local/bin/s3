#!/bin/bash
# This script is used to manage `/etc/fstab` entries and mount/unmount S3 filesystems together with `s3fs`
ACTION=$1
BUCKET=$2
BUCKET_PREFIX=$3
MOUNT_POINT=$4
FSTAB="/etc/fstab"
FSTYPE="s3fs"
FSTAB_ENTRY="%s#%s%s %s fuse _netdev,allow_other,rw,nosuid,nodev,relatime,user_id=0,group_id=0,default_permissions 0 0\n"

# When mounting the root of the bucket, goofys requires us not to omit the prefix
if [[ "${BUCKET_PREFIX}" = "/" ]]; then
	BUCKET_PREFIX=""
else
	BUCKET_PREFIX=":${BUCKET_PREFIX}"
fi

if [[ "$ACTION" = "fstab" ]]; then
	printf "$FSTAB_ENTRY" "${FSTYPE}" "${BUCKET}" "${BUCKET_PREFIX}" "${MOUNT_POINT}"  >> ${FSTAB}
	# Create mount point directory
	mkdir -p "${MOUNT_POINT}"
elif [[ "$ACTION" = "mount" ]]; then
	if [ ! -w /dev/fuse ]; then 
		echo "* FUSE not available; not attempting to mount filesystems"
		exit 1
	fi
	mount -a
	echo "Mounted buckets"
	# Display all mounted filesystems of fstype
	grep "^${FSTYPE}#" ${FSTAB} | awk '{print $2}' | xargs -r df --output=source,target
elif [[ "$ACTION" == "unmount" ]]; then
	# Forcefully unmount all filesystems of fstype
	grep "^${FSTYPE}#" ${FSTAB} | awk '{print $2}' | xargs -r umount -f
	echo "Unmounted"
else
	echo "Usage: "
	echo "  $0 [add|mount|unmount]"
fi 
