#!/usr/bin/env bash
# This script sets up a Terraform backend for a given project using envs

shopt -s nullglob
TF_BUCKET_REGION=${TF_BUCKET_REGION:-${AWS_REGION}}
TF_BUCKET_PREFIX=${TF_BUCKET_PREFIX:-$(basename $(pwd))}
TF_DIR=${@:-1}
TF_FILE=${TF_FILE:-terraform.tfstate}
TF_FILES=(*.tf *.tfvars)
TF_ARGS=("-backend=true")
shopt -u nullglob

# Exit on all errors
set -e

# Disable color if not running in a TTY (e.g. CI/CD context)
if [ ! -t 1 ]; then
	TF_ARGS+=("-no-color")
fi

# Do not attempt to initialize non-terraform projects
if [ -z "${TF_FILES}" ] && [ -z "${TF_FROM_MODULE}" ]; then
	echo "Run $0 from a terraform project directory"
	exit 1
fi

# Translate environment variables to terraform arguments
[ -z "${TF_FROM_MODULE}" ] || TF_ARGS+=("-from-module=${TF_FROM_MODULE}")
[ -z "${TF_FILE}" ] || TF_ARGS+=("-backend-config=key=${TF_BUCKET_PREFIX}/${TF_FILE}")
[ -z "${TF_BUCKET}" ] || TF_ARGS+=("-backend-config=bucket=${TF_BUCKET}")
[ -z "${TF_BUCKET_REGION}" ] || TF_ARGS+=("-backend-config=region=${TF_BUCKET_REGION}")
[ -z "${TF_DYNAMODB_TABLE}" ] || TF_ARGS+=("-backend-config=dynamodb_table=${TF_DYNAMODB_TABLE}")
[ -z "${AWS_PROFILE}" ] || TF_ARGS+=("-backend-config=profile=${AWS_PROFILE}")
[ -z "${AWS_ROLE_ARN}" ] || TF_ARGS+=("-backend-config=role_arn=${AWS_ROLE_ARN}")

# Mount all filesystems (E.g. `goofys`)
mount -a

# Initialize terraform state
terraform init ${TF_ARGS[*]} $*

# Provision the module directory (unless it's our current directory)
if [ -d "${TF_DIR}" ] && [ -n "${TF_FROM_MODULE}" ] && [ "$(cd ${TF_DIR} && pwd)" != "$(pwd)" ]; then
	# Overlay our configuration files in the module directory
	[ -n "${TF_FILES}" ] && cp -a ${TF_FILES} "${TF_DIR}"
	# Move the terraform state directory
	mv -f .terraform "${TF_DIR}"
fi
