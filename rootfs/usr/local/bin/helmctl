#!/usr/bin/variant1
# vim:set ft=yaml

mixins:
  # Exit on all errors
  exit_on_errors: &exit_on_errors
    set -e

  # Default runner
  runner: &runner
    command: "bash"
    args: ["-ex", "-c"]

tasks:
  tiller:
    # Write out kubecfg
    description: "Commands that operate on the helm tiller"
    tasks:
      install:
        description: "Install the helm tiller"
        parameters:
        - name: namespace
          description: "Namespace to install tiller"
          default: "kube-system"
          type: string
          required: false
        - name: rbac-enabled
          description: "Enable RBAC"
          default: true
          type: boolean
          required: false
        script:
        - *exit_on_errors
        - |
          if [[ {{ get "rbac_enabled" }} == "true" ]]; then
            echo "Enabled Tiller with RBAC"
            kubectl get -n {{ get "namespace" }} serviceaccount tiller > /dev/null 2>&1 || \
              kubectl -n {{ get "namespace" }} create serviceaccount tiller;
            kubectl get -n {{ get "namespace" }} clusterrolebinding tiller > /dev/null 2>&1 || \
              kubectl create clusterrolebinding tiller --clusterrole cluster-admin --serviceaccount={{ get "namespace" }}:tiller;
            helm init --tiller-namespace={{ get "namespace" }} --history-max 200 --service-account tiller --upgrade --wait \
              --override 'spec.template.metadata.annotations.cluster-autoscaler\.kubernetes\.io/safe-to-evict=true' ;
          else
            echo "Enabled Tiller without RBAC"
            # The --override option adds an annotation that tells the cluster autoscaler that it is safe
            # to evict `tiller` if needed in order to shut down the node.
            helm init --tiller-namespace={{ get "namespace" }} --history-max 200 --upgrade --wait \
              --override 'spec.template.metadata.annotations.cluster-autoscaler\.kubernetes\.io/safe-to-evict=true' ;
          fi 
      uninstall:
        description: "Uninstall the helm tiller"
        parameters:
        - name: namespace
          description: "tiller's namespace"
          default: "kube-system"
          type: string
          required: false
        script:
        - *exit_on_errors
        - |
          kubectl -n {{ get "namespace" }} delete deployment tiller-deploy
          kubectl delete clusterrolebinding tiller --ignore-not-found
          kubectl -n {{ get "namespace" }} delete serviceaccount tiller --ignore-not-found
  # Current (v0.34.0) variant1 does not allow a task with the same name as a defaulted parameter of another task
  # so we cannot call this task "namespace" because it conflict with the tiller task
  # namespace:
  ns:
    # namespace is a work in progress. For now, use /usr/local/bin/annotate-namespace and destroy-namespace instead
    description: "Commands that operate on a Kubernetes namespace"
    tasks:
      annotate:
        description: "Annotate a Kubernetes namespace, creating it if needed"
        parameters:
          - name: namespace
            description: "Namespace to annotate"
            type: string
            required: true
          - name: annotation
            description: "Annotation to add"
            type: string
            required: true
        script:
        - *exit_on_errors
        - |
          kubectl get namespace {{ get "namespace" }} >/dev/null 2>&1 || kubectl create namespace {{ get "namespace" }}
          kubectl annotate --overwrite namespace {{ get "namespace" }} {{ get "annotation" }}
          echo Annotated namespace {{ get "namespace" }} with annotation \"{{ get "annotation" }}\"

