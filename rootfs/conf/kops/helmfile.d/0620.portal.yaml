helmDefaults:
  args:
    - "--wait"
    - "--recreate-pods"
    - "--timeout=600" 
    - "--force"
    - "--reset-values"

repositories:
# Cloud Posse incubator repo of helm charts
- name: "cloudposse-incubator"
  url: "https://charts.cloudposse.com/incubator/"

releases:

#######################################################################################
## portal                                                                            ##
## Portal for Kubernetes services                                                    ##
#######################################################################################

#
# References:
#   - https://github.com/cloudposse/charts/tree/master/incubator/portal
#   - https://github.com/cloudposse/charts/blob/master/incubator/portal/values.yaml
#
- name: "portal"
  namespace: "monitoring"
  labels:
    chart: "portal"
    component: "monitoring"
    namespace: "monitoring"
    vendor: "cloudposse"
    default: "true"
  chart: "cloudposse-incubator/portal"
  version: "0.1.0"
  values:
    - "values/portal.yaml"
    - "values/portal.backends.yaml"
  set:
      ## backends
    - name: "backends.dashboard.name"
      value: '{{ env "PORTAL_BACKEND_K8S_DASHBOARD_NAME" | default "Kubernetes" }}'
    - name: "backends.dashboard.endpoint"
      value: '{{ env "PORTAL_BACKEND_K8S_DASHBOARD_ENDPOINT" | default "https://kubernetes-dashboard.kube-system:443" }}'
    - name: "backends.dashboard.external"
      value: "false"

    - name: "backends.grafana.name"
      value: '{{ env "PORTAL_BACKEND_GRAFANA_NAME" | default "Grafana" }}'
    - name: "backends.grafana.endpoint"
      value: '{{ env "PORTAL_BACKEND_GRAFANA_ENDPOINT" | default "http://kube-prometheus-grafana.monitoring:80" }}'
    - name: "backends.grafana.external"
      value: "false"

    - name: "backends.alerts.name"
      value: '{{ env "PORTAL_BACKEND_ALERTS_NAME" | default "Alerts" }}'
    - name: "backends.alerts.endpoint"
      value: '{{ env "PORTAL_BACKEND_ALERTS_ENDPOINT" | default "http://kube-prometheus-alertmanager.monitoring:9093" }}'
    - name: "backends.alerts.external"
      value: "false"

    - name: "backends.prometheus.name"
      value: '{{ env "PORTAL_BACKEND_PROMETHEUS_NAME" | default "Prometheus" }}'
    - name: "backends.prometheus.endpoint"
      value: '{{ env "PORTAL_BACKEND_PROMETHEUS_ENDPOINT" | default "http://kube-prometheus-prometheus.monitoring:9090" }}'
    - name: "backends.prometheus.external"
      value: "false"

    - name: "backends.docs.name"
      value: '{{ env "PORTAL_BACKEND_DOCS_NAME" | default "Docs" }}'
    - name: "backends.docs.endpoint"
      value: '{{ env "PORTAL_BACKEND_DOCS_ENDPOINT" | default "https://docs.cloudposse.com/" }}'
    - name: "backends.docs.external"
      value: "true"

    - name: "config.title"
      value: '{{ env "PORTAL_TITLE" }}'
    - name: "config.brand"
      value: '{{ env "PORTAL_BRAND" }}'
    - name: "config.basehost"
      value: '{{ env "PORTAL_HOSTNAME" }}'
    - name: "config.image.favicon"
      value: '{{ env "PORTAL_BRAND_IMAGE_FAVICON_URL" | default "https://cloudposse.com/wp-content/uploads/sites/29/2016/04/favicon-152.png" }}'
    - name: "config.image.url"
      value: '{{ env "PORTAL_BRAND_IMAGE_URL" | default "https://raw.githubusercontent.com/cloudposse/helm-chart-scaffolding/master/logo.png" }}'
    - name: "config.image.width"
      value: '{{ env "PORTAL_BRAND_IMAGE_WIDTH" | default "35" }}'

    ## dashboard
    - name: "dashboard.replicaCount"
      value: '{{ env "PORTAL_DASHBOARD_REPLICA_COUNT" | default "2" }}'

    - name: "dashboard.image.repository"
      value: "nginx"

    - name: "dashboard.image.tag"
      value: '{{ env "PORTAL_DASHBOARD_IMAGE_TAG" | default "latest" }}'

    - name: "dashboard.image.pullPolicy"
      value: "Always"

    - name: "dashboard.service.externalPort"
      value: "80"

    - name: "dashboard.service.internalPort"
      value: "80"

    - name: "dashboard.resources.limits.cpu"
      value: "5m"

    - name: "dashboard.resources.limits.memory"
      value: "16Mi"

    - name: "dashboard.resources.requests.cpu"
      value: "3m"

    - name: "dashboard.resources.requests.memory"
      value: "8Mi"

    ## proxy
    - name: "proxy.enabled"
      value: "true"

    - name: "proxy.replicaCount"
      value: '{{ env "PORTAL_PROXY_REPLICA_COUNT" | default "2" }}'

    - name: "proxy.image.repository"
      value: "traefik"

    - name: "proxy.image.tag"
      value: '{{ env "PORTAL_PROXY_IMAGE_TAG" | default "1.5.4" }}'

    - name: "proxy.image.pullPolicy"
      value: "Always"

    - name: "proxy.service.externalPort"
      value: "80"

    - name: "proxy.service.internalPort"
      value: "80"

    - name: "proxy.resources.limits.cpu"
      value: "5m"

    - name: "proxy.resources.limits.memory"
      value: "64Mi"

    - name: "proxy.resources.requests.cpu"
      value: "3m"

    - name: "proxy.resources.requests.memory"
      value: "32Mi"

    ## oauth2-proxy
    - name: "oauth2-proxy.app.useSSL"
      value: "false"

    - name: "oauth2-proxy.app.upstreams[0]"
      value: "file:///dev/null"

    - name: "oauth2-proxy.app.provider"
      value: "github"

    - name: "oauth2-proxy.app.clientID"
      value: '{{ env "PORTAL_OAUTH2_PROXY_GITHUB_CLIENT_ID" }}'

    - name: "oauth2-proxy.app.clientSecret"
      value: '{{ env "PORTAL_OAUTH2_PROXY_GITHUB_CLIENT_SECRET" }}'

    - name: "oauth2-proxy.app.githubOrg"
      value: '{{ env "PORTAL_OAUTH2_PROXY_GITHUB_ORGANIZATION" }}'

    - name: "oauth2-proxy.app.githubTeam"
      value: '{{ env "PORTAL_OAUTH2_PROXY_GITHUB_TEAM" }}'

    - name: "oauth2-proxy.app.requestLogging"
      value: "false"

    - name: "oauth2-proxy.app.passAccessToken"
      value: "false"

    - name: "oauth2-proxy.app.passBasicAuth"
      value: "false"

    - name: "oauth2-proxy.app.passHostHeader"
      value: "true"

    - name: "oauth2-proxy.app.cookieName"
      value: '{{ env "PORTAL_OAUTH2_PROXY_COOKIE_NAME" }}'

    - name: "oauth2-proxy.app.cookieSecret"
      value: '{{ env "PORTAL_OAUTH2_PROXY_COOKIE_SECRET" }}'

    - name: "oauth2-proxy.app.cookieDomain"
      value: '.{{ env "PORTAL_HOSTNAME" }}'

    - name: "oauth2-proxy.app.cookieSecure"
      value: "true"

    - name: "oauth2-proxy.app.cookieHttponly"
      value: "false"

    - name: "oauth2-proxy.app.replicaCount"
      value: '{{ env "PORTAL_OAUTH2_PROXY_REPLICA_COUNT" | default "2" }}'

    - name: "oauth2-proxy.app.image.repository"
      value: "cloudposse/oauth2-proxy"

    - name: "oauth2-proxy.app.image.tag"
      value: '{{ env "PORTAL_OAUTH2_PROXY_IMAGE_TAG" | default "2.2" }}'

    - name: "oauth2-proxy.app.image.pullPolicy"
      value: "Always"

    - name: "oauth2-proxy.app.resources.limits.cpu"
      value: "10m"

    - name: "oauth2-proxy.app.resources.limits.memory"
      value: "16Mi"

    - name: "oauth2-proxy.app.resources.requests.cpu"
      value: "5m"

    - name: "oauth2-proxy.app.resources.requests.memory"
      value: "8Mi"

    ## Ingress
    - name: "ingress.enabled"
      value: "true"

    - name: "ingress.dns.enabled"
      value: "false"

    - name: "ingress.tls.enabled"
      value: "true"

    - name: "ingress.annotations.kubernetes\\.io/ingress\\.class"
      value: "nginx"

    # FIXME: this is blocked by https://github.com/roboll/helmfile/issues/119
    #- name: "ingress.annotations.kubernetes\\.io/tls-acme"
    #  value: "true"

    ### Required: PORTAL_INGRESS; e.g. ingress.us-west-2.staging.cloudposse.org
    - name: "ingress.annotations.external-dns\\.alpha\\.kubernetes\\.io/target"
      value: '{{ env "PORTAL_INGRESS" }}'

    # DNS TTL for PORTAL_HOSTNAME; e.g. 60
    # FIXME: this is blocked by https://github.com/roboll/helmfile/issues/119
    #- name: "ingress.annotations.external-dns\\.alpha\\.kubernetes\\.io/ttl"
    #  value: "60"
