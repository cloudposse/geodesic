#!/bin/bash
# Please run the following commands to start the geodesic shell (modify as necessary)
export DOCKER_IMAGE=${DOCKER_IMAGE:-cloudposse/geodesic}
export DOCKER_TAG=${DOCKER_TAG:-latest}
export DOCKER_NAME=${DOCKER_NAME:-geodesic}

STATE_DIR=${STATE_DIR:-${HOME}/.geodesic}
OS=$(uname -s)
mkdir -p ${STATE_DIR}

if ! which docker > /dev/null; then
  echo "Cannot find docker installed on this system. Please install and try again."
  exit 1
fi

if [ "$1" == "update" ]; then
  curl --silent --fail https://geodesic.sh | bash
  if [ $? -eq 0 ]; then
    echo "# ${DOCKER_NAME}:${DOCKER_TAG} has been updated."
    exit 0
  else
    echo "Failed to update geodesic"
    exit 1
  fi
fi

docker ps >/dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Unable to communicate with docker daemon. Make sure your environment is properly configured and then try again."
  exit 1
fi

if [ -t 1 ]; then
  # Running in terminal 
  DOCKER_ARGS=(-it --rm --name="${DOCKER_NAME}-bootstrap" --env LS_COLORS --env TERM --env TERM_COLOR)

  if [ -n "$SSH_AUTH_SOCK" ]; then
    if [ `uname -s` == 'Darwin' ]; then
      # Run our own SSH agent
      DOCKER_ARGS=("${DOCKER_ARGS[@]}"
                     --volume "${HOME}/.ssh:/geodesic/.ssh" )
    else
      DOCKER_ARGS=("${DOCKER_ARGS[@]}"
                     --volume "$SSH_AUTH_SOCK:$SSH_AUTH_SOCK" 
                     --env SSH_AUTH_SOCK
                     --env SSH_CLIENT
                     --env SSH_CONNECTION
                     --env SSH_TTY 
                     --env USER)
    fi
  fi
else
  DOCKER_ARGS=()
fi

if [ "${OS}" == "Darwin" ]; then
  # Run in privleged mode to enable time synchronization of system clock with hardware clock
  # Implement DNS fix related to https://github.com/docker/docker/issues/24344
  DOCKER_ARGS=("${DOCKER_ARGS[@]}"
                --dns=8.8.8.8
              )
fi

if [ -n "${HOME}" ]; then
  if [ "${HOME}" == "/geodesic" ]; then
    echo "WARNING: not mounting ${HOME} because it conflicts with geodesic"
  else
    DOCKER_ARGS=("${DOCKER_ARGS[@]}"
                  --volume=${HOME}:${HOME}
                )
  fi
fi

DOCKER_ARGS=("${DOCKER_ARGS[@]}"
              --privileged
              --publish 8001:8001
              --name "${DOCKER_NAME}"
              --rm 
              --env BOOTSTRAP=false
              --volume ${STATE_DIR}:/geodesic/state)

docker inspect geodesic >/dev/null 2>&1
if [ $? -eq 0 ]; then
  echo "# Attaching to existing ${DOCKER_NAME} session"
  if [ $# -eq 0 ]; then
    set -- "/bin/bash" "--rcfile" "/geodesic/profile" "$@"
  fi
  docker exec -it "${DOCKER_NAME}" $*
else
  echo "# Starting new ${DOCKER_NAME} session"
  docker run "${DOCKER_ARGS[@]}" ${DOCKER_IMAGE}:${DOCKER_TAG} $*
fi
