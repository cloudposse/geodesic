name: "docker"
on:
  pull_request:
    types: [opened, synchronize, reopened]
  release:
    types:
    - created
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout source code at current commit"
      uses: actions/checkout@v2
    - name: Prepare tags for Docker image
      if: (github.event_name == 'release' && github.event.action == 'created') || github.event.pull_request.head.repo.full_name == github.repository
      id: prepare
      run: |
        TAGS=${{ github.repository }}:sha-${GITHUB_SHA:0:7}
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        elif [[ $GITHUB_REF == refs/pull/* ]]; then
          VERSION=pr-${{ github.event.pull_request.number }}-merge
        fi
        if [[ -n $VERSION ]]; then
          TAGS="$TAGS,${{ github.repository }}:${VERSION}"
        fi
        if [[ $VERSION =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          TAGS="$TAGS,${{ github.repository }}:latest"
        fi
        echo ::set-output name=tags::${TAGS}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - name: Login to DockerHub
      if: (github.event_name == 'release' && github.event.action == 'created') || github.event.pull_request.head.repo.full_name == github.repository
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: "Build and push Alpine docker image to DockerHub"
      id: docker_build_alpine
      uses: docker/build-push-action@v2
      with:
        push: ${{ (github.event_name == 'release' && github.event.action == 'created') || github.event.pull_request.head.repo.full_name == github.repository }}
        tags: ${{ steps.prepare.outputs.tags }}-alpine
        file: ./Dockerfile.alpine
    - name: "Build and push Debian docker image to DockerHub"
      id: docker_build_debian
      uses: docker/build-push-action@v2
      with:
        push: ${{ (github.event_name == 'release' && github.event.action == 'created') || github.event.pull_request.head.repo.full_name == github.repository }}
        tags: ${{ steps.prepare.outputs.tags }}-debian
        file: ./Dockerfile.debian
