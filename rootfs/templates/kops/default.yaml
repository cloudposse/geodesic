apiVersion: kops/v1alpha2
kind: Cluster
metadata:
  name: {{ getenv "KOPS_CLUSTER_NAME" }}
spec:
  additionalPolicies:
      nodes: |
        [
          {
            "Sid": "assumeClusterRole",
            "Action": [
              "sts:AssumeRole"
            ],
            "Effect": "Allow",
            "Resource": ["*"]
          {{- if bool (getenv "KOPS_CLUSTER_AUTOSCALER_ENABLED" "false") }}
          },
          {
              "Effect": "Allow",
              "Action": [
                  "autoscaling:DescribeAutoScalingGroups",
                  "autoscaling:DescribeAutoScalingInstances",
                  "autoscaling:DescribeTags",
                  "autoscaling:SetDesiredCapacity",
                  "autoscaling:TerminateInstanceInAutoScalingGroup"
              ],
              "Resource": "*"
          {{- end }}
          }
        ]
  api:
    loadBalancer:
      type: Public
      idleTimeoutSeconds: {{ getenv "KOPS_API_LOAD_BALANCER_IDLE_TIMEOUT_SECONDS" "600" }}
  kubeAPIServer:
  {{- if bool (getenv "KOPS_AUTHORIZATION_RBAC_ENABLED" "false") }}
    authorizationMode: {{ getenv "KOPS_KUBE_API_SERVER_AUTHORIZATION_MODE" "RBAC,AlwaysAllow" }}
    authorizationRbacSuperUser: {{ getenv "KOPS_KUBE_API_SERVER_AUTHORIZATION_RBAC_SUPER_USER" "admin" }}
  {{- end }}
  {{- if bool (getenv "KOPS_ADMISSION_CONTROL_ENABLED" "true") }}
    admissionControl:
    - NamespaceLifecycle
    - LimitRanger
    - ServiceAccount
    - PersistentVolumeLabel
    - DefaultStorageClass
    - DefaultTolerationSeconds
    - MutatingAdmissionWebhook
    - ValidatingAdmissionWebhook
    - ResourceQuota
    - NodeRestriction
    - Priority
  {{- end }}
  {{- if bool (getenv "KOPS_AWS_IAM_AUTHENTICATOR_ENABLED" "false") }}
  authentication:
    aws: {}
  {{- end }}
  authorization:
    {{- if bool (getenv "KOPS_AUTHORIZATION_RBAC_ENABLED" "false") }}
    rbac: {}
    {{- else }}
    alwaysAllow: {}
    {{- end }}
  channel: stable
  cloudLabels:
    Cluster: {{ getenv "KOPS_CLUSTER_NAME" }}
    {{- if bool (getenv "KOPS_CLUSTER_AUTOSCALER_ENABLED" "false") }}
    k8s.io/cluster-autoscaler/enabled: "true"
    kubernetes.io/cluster/{{ getenv "KOPS_CLUSTER_NAME" }}: "owned"
    {{- end }}
  cloudProvider: aws
  configBase: {{ getenv "KOPS_STATE_STORE" }}/{{ getenv "KOPS_CLUSTER_NAME" }}
  {{- if getenv "KOPS_DNS_ZONE" }}
  dnsZone: {{ getenv "KOPS_DNS_ZONE" }}
  {{- else }}
  dnsZone: {{ getenv "KOPS_CLUSTER_NAME" | regexp.Replace "^[^.]+\\." "" }}
  {{- end }}
  etcdClusters:
  - etcdMembers:
    {{- range (getenv "KOPS_AVAILABILITY_ZONES" | strings.Split ",") }}
    - encryptedVolume: true
      instanceGroup: master-{{.}}
      name: {{ . | regexp.Replace "^.*[0-9]" "" }}
    {{- end }}
    name: main
  - etcdMembers:
    {{- range (getenv "KOPS_AVAILABILITY_ZONES" | strings.Split ",") }}
    - encryptedVolume: true
      instanceGroup: master-{{.}}
      name: {{ . | regexp.Replace "^.*[0-9]" "" }}
    {{- end }}
    name: events
  kubernetesApiAccess:
  - 0.0.0.0/0
  kubernetesVersion: {{ getenv "KUBERNETES_VERSION" }}
  masterPublicName: api.{{ getenv "KOPS_CLUSTER_NAME" }}
  networkCIDR: {{ getenv "KOPS_NETWORK_CIDR" "172.20.0.0/16" }}
  networking:
    calico: {}
  nonMasqueradeCIDR: {{ getenv "KOPS_NON_MASQUERADE_CIDR" "100.64.0.0/10" }}
  sshAccess:
  - 0.0.0.0/0
  subnets:
  {{- range $index, $value := (getenv "KOPS_AVAILABILITY_ZONES" | strings.Split ",") }}
  {{- $privateSubnets := getenv "KOPS_PRIVATE_SUBNETS" }}
  {{- $subnet := strings.Split "," $privateSubnets }}
  - cidr: {{ index $subnet $index }}
    name: {{ $value }}
    type: Private
    zone: {{ $value }}
  {{- end }}
  {{- range $index, $value := (getenv "KOPS_AVAILABILITY_ZONES" | strings.Split ",") }}
  {{- $utilitySubnets := getenv "KOPS_UTILITY_SUBNETS" }}
  {{- $subnet := strings.Split "," $utilitySubnets }}
  - cidr: {{ index $subnet $index }}
    name: utility-{{ $value }}
    type: Utility
    zone: {{ $value }}
  {{- end }}
  topology:
    bastion:
      bastionPublicName: {{ getenv "KOPS_BASTION_PUBLIC_NAME" }}.{{ getenv "KOPS_CLUSTER_NAME" }}
    dns:
      type: Public
    masters: private
    nodes: private

---
apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: {{ getenv "KOPS_CLUSTER_NAME" }}
  name: bastions
spec:
  image: {{ getenv "KOPS_BASE_IMAGE" }}
  machineType: {{ getenv "BASTION_MACHINE_TYPE" }}
  maxSize: 1
  minSize: 1
  role: Bastion
  subnets:
  {{- range (getenv "KOPS_AVAILABILITY_ZONES" | strings.Split ",") }}
  - utility-{{ . }}
  {{- end }}

{{ range (getenv "KOPS_AVAILABILITY_ZONES" | strings.Split ",") }}

---
apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: {{ getenv "KOPS_CLUSTER_NAME" }}
  name: master-{{ . }}
spec:
  detailedInstanceMonitoring: {{ getenv "KOPS_CLOUDWATCH_DETAILED_MONITORING" "false" }}
  associatePublicIp: false
  image: {{ getenv "KOPS_BASE_IMAGE" }}
  machineType: {{ getenv "MASTER_MACHINE_TYPE" }}
  maxSize: 1
  minSize: 1
  role: Master
  subnets:
  - {{ . }}
{{- end }}

---
apiVersion: kops/v1alpha2
kind: InstanceGroup
metadata:
  labels:
    kops.k8s.io/cluster: {{ getenv "KOPS_CLUSTER_NAME" }}
  name: nodes
spec:
  detailedInstanceMonitoring: {{ getenv "KOPS_CLOUDWATCH_DETAILED_MONITORING" "false" }}
  associatePublicIp: false
  image: {{ getenv "KOPS_BASE_IMAGE" }}
  machineType: {{ getenv "NODE_MACHINE_TYPE" }}
  maxSize: {{ getenv "NODE_MAX_SIZE" }}
  minSize: {{ getenv "NODE_MIN_SIZE" }}
  role: Node
  subnets:
  {{- range (getenv "KOPS_AVAILABILITY_ZONES" | strings.Split ",") }}
  - {{ . }}
  {{- end }}

{{/* Allow the manifest to be extended via a datasource */}}
{{- if (datasourceExists "extensions") -}}
---
{{ include "extensions" }}
{{- end -}}
