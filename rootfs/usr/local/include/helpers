#
# Helpers - stuff that's shared between make files
#


MAKEFILE_PATH := $(strip $(MAKEFILE_LIST))
MAKEFILE_DIR := $(shell dirname "$(MAKEFILE_PATH)")

EDITOR ?= vim

SHELL = /bin/bash

green = $(shell echo -e '\x1b[32;01m$1\x1b[0m')
yellow = $(shell echo -e '\x1b[33;01m$1\x1b[0m')
red = $(shell echo -e '\x1b[33;31m$1\x1b[0m')

# Ensures that a variable is defined
define assert-set
   @if [ -z "$$$(1)" ]; then \
		if [ -z '$(2)' ]; then \
			echo '$(1) not defined in $(@)'; \
			exit 1; \
		else \
			echo '$(2)'; \
			exit 1; \
		fi; \
	fi
endef

# Ensures that a variable is undefined
define assert-unset
  @[ -n "$$$(1)" ] || (echo "$(1) should not be defined in $(@)"; exit 1)
endef

# Convert an ENV to --env arg (if defined); eg. $(call env-to-arg,VERSION) returns --version=something
define env-to-arg
  $(shell printf -- '--%s=%s' $(shell echo $(1) | tr '[:upper:]' '[:lower:]' | tr '_' '-') $($(1)) | sed 's/^.*=$$//')
endef

# This "default" definition conflicts with build-harness v0.44.2
# default: help

# Symbolically represents something handled by `cloud` as a module
module: 
	@exit 0

.PHONY : confirm
confirm:
	@confirm KOPS_CLUSTER_NAME

# This "help" definition conflicts with build-harness v0.44.2
#  .PHONY : help
#  ## This help screen
#  help:
#    @printf "Available targets:\n\n"
#    @awk '/^[a-zA-Z0-9%:\\_-]+:/ { \
#      helpMessage = match(lastLine, /^## (.*)/); \
#      if (helpMessage) { \
#        helpCommand = $$1; \
#        helpMessage = substr(lastLine, RSTART + 3, RLENGTH); \
#        gsub("\\\\", "", helpCommand); \
#        gsub(":+$$", "", helpCommand); \
#        printf "  \x1b[32;01m%-35s\x1b[0m %s\n", helpCommand, helpMessage; \
#      } \
#    } \
#    { lastLine = $$0 }' $(MAKEFILE_LIST)
#    @printf "\n"
